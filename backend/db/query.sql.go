// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
	"net/netip"
)

const createFile = `-- name: CreateFile :one
INSERT INTO files (
  mime_type, file_size, name, ip_addr, hash
) VALUES (
  $1, $2, $3, $4, $5
)
RETURNING id
`

type CreateFileParams struct {
	MimeType string
	FileSize int64
	Name     string
	IpAddr   netip.Addr
	Hash     string
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (int32, error) {
	row := q.db.QueryRow(ctx, createFile,
		arg.MimeType,
		arg.FileSize,
		arg.Name,
		arg.IpAddr,
		arg.Hash,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteFile = `-- name: DeleteFile :exec
DELETE FROM files
WHERE id = $1
`

func (q *Queries) DeleteFile(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteFile, id)
	return err
}

const getFileFromHash = `-- name: GetFileFromHash :one
SELECT id, mime_type FROM files
WHERE hash = $1
`

type GetFileFromHashRow struct {
	ID       int32
	MimeType string
}

func (q *Queries) GetFileFromHash(ctx context.Context, hash string) (GetFileFromHashRow, error) {
	row := q.db.QueryRow(ctx, getFileFromHash, hash)
	var i GetFileFromHashRow
	err := row.Scan(&i.ID, &i.MimeType)
	return i, err
}
